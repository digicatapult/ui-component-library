// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer onClick 1`] = `
.c3 {
  grid-area: icon;
}

.c5 {
  grid-area: title;
  justify-self: left;
}

.c7 {
  grid-area: indicator;
}

.c2 {
  display: grid;
  grid-template-areas: "icon title indicator";
  grid-template-rows: auto;
  grid-template-columns: auto 1fr auto;
  gap: 1em;
  align-items: center;
}

.c0 {
  width: 100%;
}

.c4 {
  background: black;
  height: calc(1em / 16);
  width: 1em;
  margin: 0 calc(1em * 0.35 / 2);
}

.c4::before {
  content: '';
  display: block;
  background: black;
  height: calc(1em / 16);
  width: 1em;
  transform: translateY(calc(-4 * 1em / 16)) scaleX(1.35);
}

.c4::after {
  content: '';
  display: block;
  background: black;
  height: calc(1em / 16);
  width: 1em;
  transform: translateY(calc(3 * 1em / 16)) scaleX(0.51);
}

.c6 {
  color: black;
}

.c8 {
  margin: 0 0.5em;
  font-size: 0.5em;
  color: black;
  transition: transform 0.5s ease;
  transform: scaleX(2) scaleY(-1);
}

.c1 {
  width: 100%;
  font: inherit;
  background: transparent;
  padding: 8px 16px;
  border: 0;
}

.c1:hover {
  cursor: pointer;
}

.c9 {
  overflow-y: hidden;
  width: 100%;
  transition: max-height 0.5s ease;
  max-height: 1000px;
  animation: 1s fadeIn;
  animation-fill-mode: forwards;
}

.c10 {
  position: relative;
  width: 100%;
}

.c11 {
  min-height: 500px;
  background: cyan;
}

<div
  className="c0"
  width="100%"
>
  <button
    background="transparent"
    className="c1"
    color="black"
    isOpen={true}
    onClick={[Function]}
    title=""
  >
    <div
      alignItems="center"
      areas={
        [
          [
            "icon",
            "title",
            "indicator",
          ],
        ]
      }
      className="c2"
      columns={
        [
          "auto",
          "1fr",
          "auto",
        ]
      }
      gap="1em"
      rows={
        [
          "auto",
        ]
      }
    >
      <div
        area="icon"
        className="c3"
      >
        <div
          className="c4"
          color="black"
        />
      </div>
      <div
        area="title"
        className="c5"
        justifySelf="left"
      >
        <div
          className="c6"
          color="black"
        />
      </div>
      <div
        area="indicator"
        className="c7"
      >
        <div
          className="c8"
          color="black"
          isOpen={true}
        >
          ▼
        </div>
      </div>
    </div>
  </button>
  <div
    className="c9"
    isOpen={true}
    maxHeight={1000}
  >
    <div
      className="c10"
    >
      <div
        className="c11"
      />
    </div>
  </div>
</div>
`;

exports[`Drawer simple 1`] = `
.c3 {
  grid-area: icon;
}

.c5 {
  grid-area: title;
  justify-self: left;
}

.c7 {
  grid-area: indicator;
}

.c2 {
  display: grid;
  grid-template-areas: "icon title indicator";
  grid-template-rows: auto;
  grid-template-columns: auto 1fr auto;
  gap: 1em;
  align-items: center;
}

.c0 {
  width: 100%;
}

.c4 {
  background: black;
  height: calc(1em / 16);
  width: 1em;
  margin: 0 calc(1em * 0.35 / 2);
}

.c4::before {
  content: '';
  display: block;
  background: black;
  height: calc(1em / 16);
  width: 1em;
  transform: translateY(calc(-4 * 1em / 16)) scaleX(1.35);
}

.c4::after {
  content: '';
  display: block;
  background: black;
  height: calc(1em / 16);
  width: 1em;
  transform: translateY(calc(3 * 1em / 16)) scaleX(0.51);
}

.c6 {
  color: black;
}

.c8 {
  margin: 0 0.5em;
  font-size: 0.5em;
  color: black;
  transition: transform 0.5s ease;
  transform: scaleX(2);
}

.c1 {
  width: 100%;
  font: inherit;
  background: transparent;
  padding: 8px 16px;
  border: 0;
}

.c1:hover {
  cursor: pointer;
}

.c9 {
  overflow-y: hidden;
  width: 100%;
  transition: max-height 0.5s ease;
  max-height: 0px;
}

.c10 {
  position: relative;
  width: 100%;
}

.c11 {
  min-height: 500px;
  background: cyan;
}

<div
  className="c0"
  width="100%"
>
  <button
    background="transparent"
    className="c1"
    color="black"
    isOpen={false}
    onClick={[Function]}
    title=""
  >
    <div
      alignItems="center"
      areas={
        [
          [
            "icon",
            "title",
            "indicator",
          ],
        ]
      }
      className="c2"
      columns={
        [
          "auto",
          "1fr",
          "auto",
        ]
      }
      gap="1em"
      rows={
        [
          "auto",
        ]
      }
    >
      <div
        area="icon"
        className="c3"
      >
        <div
          className="c4"
          color="black"
        />
      </div>
      <div
        area="title"
        className="c5"
        justifySelf="left"
      >
        <div
          className="c6"
          color="black"
        />
      </div>
      <div
        area="indicator"
        className="c7"
      >
        <div
          className="c8"
          color="black"
          isOpen={false}
        >
          ▼
        </div>
      </div>
    </div>
  </button>
  <div
    className="c9"
    isOpen={false}
    maxHeight={1000}
  >
    <div
      className="c10"
    >
      <div
        className="c11"
      />
    </div>
  </div>
</div>
`;

exports[`Drawer with overrides 1`] = `
.c3 {
  grid-area: icon;
}

.c5 {
  grid-area: title;
  justify-self: left;
}

.c7 {
  grid-area: indicator;
}

.c2 {
  display: grid;
  grid-template-areas: "icon title indicator";
  grid-template-rows: auto;
  grid-template-columns: auto 1fr auto;
  gap: 1em;
  align-items: center;
}

.c0 {
  width: 300px;
}

.c4 {
  background: black;
  height: calc(1em / 16);
  width: 1em;
  margin: 0 calc(1em * 0.35 / 2);
}

.c4::before {
  content: '';
  display: block;
  background: black;
  height: calc(1em / 16);
  width: 1em;
  transform: translateY(calc(-4 * 1em / 16)) scaleX(1.35);
}

.c4::after {
  content: '';
  display: block;
  background: black;
  height: calc(1em / 16);
  width: 1em;
  transform: translateY(calc(3 * 1em / 16)) scaleX(0.51);
}

.c6 {
  color: black;
}

.c8 {
  margin: 0 0.5em;
  font-size: 0.5em;
  color: black;
  transition: transform 0.5s ease;
  transform: scaleX(2);
}

.c1 {
  width: 100%;
  font: inherit;
  background: magenta;
  padding: 8px 16px;
  border: 0;
}

.c1:hover {
  cursor: pointer;
}

.c9 {
  overflow-y: hidden;
  width: 100%;
  transition: max-height 0.5s ease;
  max-height: 0px;
}

.c10 {
  position: relative;
  width: 100%;
}

.c11 {
  min-height: 500px;
  background: cyan;
}

<div
  className="c0"
  width="300px"
>
  <button
    background="magenta"
    className="c1"
    color="black"
    isOpen={false}
    onClick={[Function]}
    title="FILTER"
  >
    <div
      alignItems="center"
      areas={
        [
          [
            "icon",
            "title",
            "indicator",
          ],
        ]
      }
      className="c2"
      columns={
        [
          "auto",
          "1fr",
          "auto",
        ]
      }
      gap="1em"
      rows={
        [
          "auto",
        ]
      }
    >
      <div
        area="icon"
        className="c3"
      >
        <div
          className="c4"
          color="black"
        />
      </div>
      <div
        area="title"
        className="c5"
        justifySelf="left"
      >
        <div
          className="c6"
          color="black"
        >
          FILTER
        </div>
      </div>
      <div
        area="indicator"
        className="c7"
      >
        <div
          className="c8"
          color="black"
          isOpen={false}
        >
          ▼
        </div>
      </div>
    </div>
  </button>
  <div
    className="c9"
    isOpen={false}
    maxHeight={1000}
  >
    <div
      className="c10"
    >
      <div
        className="c11"
      />
    </div>
  </div>
</div>
`;
